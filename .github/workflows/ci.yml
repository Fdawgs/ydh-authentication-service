name: CI

on:
    push:
        paths-ignore:
            - "docs/**"
            - "*.md"
    pull_request:
        paths-ignore:
            - "docs/**"
            - "*.md"

jobs:
    lint:
        name: Lint Code
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: 14.x
            - name: Get Yarn Cache Directory Path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      -yarn-
            - name: Install
              run: yarn install --frozen-lockfile
            - name: Run ESLint
              run: yarn lint
            - name: Run Prettier
              run: yarn lint:prettier:ci
            - name: Run License Checker
              run: yarn license-checker

    unit-tests:
        name: Unit Tests
        if: github.event.pull_request.draft == false
        strategy:
            matrix:
                node-version: [10.x, 12.x, 14.x]
                os: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Get Yarn Cache Directory Path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      -yarn-
            - name: Install
              run: yarn install --frozen-lockfile
            - name: Run Tests
              run: |
                  cp .env.template .env.test
                  yarn jest-coverage
            - name: Coveralls Parallel
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  parallel: true

    lint-docker-file:
        name: Lint Dockerfile
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: brpaz/hadolint-action@v1.3.1
              with:
                  dockerfile: Dockerfile

    # docker-tests:
    #     name: Docker Build Tests
    #     if: github.event.pull_request.draft == false
    #     needs: lint-docker-file
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v2
    #         - name: Build and Start App
    #           run: |
    #               docker build --build-arg NODE_ENV=test -t obfuscation-service .
    #               docker run --network --publish 8204:8204 obfuscation-service

    docker-compose-tests:
        name: Docker Compose Build Tests
        if: github.event.pull_request.draft == false
        needs: lint-docker-file
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Build and Start App
              run: |
                  cp .env.template .env.test
                  NODE_ENV=test docker-compose up --detach

    coverage:
        name: Aggregate Coverage Calculations
        if: github.event.pull_request.draft == false
        needs: unit-tests
        runs-on: ubuntu-latest
        steps:
            - name: Coveralls Finished
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  parallel-finished: true

    automerge:
        name: Automatically merge Dependabot pull requests
        if: github.event.pull_request.draft == false
        needs: [lint, unit-tests, docker-compose-tests]
        runs-on: ubuntu-latest
        steps:
            - uses: fastify/github-action-merge-dependabot@v1.1.1
              if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
